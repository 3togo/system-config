#!/bin/bash

set -xe

set -o pipefail
function die() {
    echo "$@"
    exit -1
}

rev=HEAD

TEMP=$(getopt -o nb:r: --long revision: -n $(basename $0) -- "$@")
do_fetch=true
eval set -- "$TEMP"
while true; do
    case "$1" in
        -n)
            do_fetch=false
            shift
            ;;
        -b)
            export REPO_BRANCH=$2
            shift 2
            ;;
        -r|--revision)
            rev=$2
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

if test $do_fetch = true; then
    if test -z "$(lookup-file -e .repo)"; then
        git fetch -v
    else
        2nd repo sync -n . || git fetch origin
    fi
fi


if ! git-is-ancestor $(repo-remote-branch) HEAD; then
    if yes-or-no-p -y "Not fast-forward push is not allowed, rebase? "; then
        git rebase $(repo-remote-branch) ||
        die "Rebase failed"
    else
        die "Not fast-forward push is not allowed"
    fi
fi

reviewers=()
if test $# = 0; then
    if yes-or-no-p -y "Add your self as the reviewer?"; then
        set -- $(git config user.email)
    else
        die "Error: Usage $(basename $0) REVIEWER..."
    fi
fi

while test $# -gt 0; do
    reviewers=("${reviewers[@]}" "$(echo "${1%@*}"|perl -npe 's/.*<//')")
    shift
done


# git pull ssh://hjbao@bear:29418/android/platform/external/rayzerlink-tools refs/changes/74/474/1
export REMOTE=$( (repo-review-url|perl -npe 's!:8080/r/!:/!') )

(
    if tty >/dev/null 2>&1; then
        git push  --receive-pack="$(
            echo -n 'git receive-pack ';
            for x in "${reviewers[@]}"; do
                echo -n "--reviewer=$x "
            done)" $REMOTE "$rev":refs/for/`repo-branch` 2>&1 |
        grep -v 'x11 forwarding' -i |
        perl -npe '
    if (m,http://bear/gerrit/(\d+),) {
        system("putclip", "git", "pull", $ENV{REMOTE},
               "refs/changes/" . substr($1, -2) . "/$1/1");
    }'
        echo
        echo '* git commit message:'
        echo
        git log -1 "$rev"
    else
        cat
    fi
) | perl  -npe 's/\033\[./ /g' |tr '\r' '\n'| tee /dev/tty ~/.logs/gerrit-review.log.$$

set +x
echo push ok.

(
    cd $(dirname $(lookup-file .git))
    set -e
    test -e .git
    if test -e .gerrit-hooks; then
        echo gerrit hooks found, push for review.
        bash .gerrit-hooks push-for-review
    fi
)

mv ~/.logs/gerrit-review.log.$$ ~/.logs/gerrit-review.log
