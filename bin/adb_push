#!/usr/bin/env perl
use String::ShellQuote;
use Getopt::Long;
use English;
use strict;
my $secure;

sub debug(@) {
    print STDERR "@_\n";
}

GetOptions(
    "s!" => \$secure,
    );

my $mount_cmd = "adb remount";
my $dest = pop( @ARGV);
my $qdest = shell_quote($dest);

my $dest_is_dir = qx(adb shell 'test -d $qdest && echo -n yes');

my $host;
my $dir;
if ($dest =~ m/:/) {
    $dest = $POSTMATCH;
    $host = $PREMATCH;
    system("ssh", $host, "bash", "-c", $mount_cmd);
} else {
    system($mount_cmd);
}

sub push_one_file($$)
{
    my ($file, $base) = @_;
    my $true_dest = "$dest/$base";
    if (not $dest_is_dir) {
        $true_dest = $dest;
    }
    if (system("adb", "push", $file, "$true_dest")) {
        debug "push failed, try to use sdcard";
        system("adb", "push", $_, "/sdcard/$base");
        system("adb", "shell", "su", "-c", "cp /sdcard/$base $true_dest");
        if ($true_dest =~ m!/xbin/|/bin/!) {
            system("adb", "shell", "su", "-c", "chmod 755 $true_dest");
        }
    }
}

for (@ARGV) {
    my $file = $_;
    if ($_ !~ m!^/scp:|^[^/]+:!) {
        $_ = shell_quote($_);
        chomp($file=qx/lookup-file $_/);
    }

    if ($host) {
        $file = shell_quote($file);
        chomp($dir = qx/dirname $file/);
        chomp($dir = qx/readlink -f $dir/);
        $file =~ s!.*/!!;
        $file = "$dir/$file";
        $file = shell_quote($file);
        $dir = $file;
        $dir =~ s!(.*)/.*!$1!;
        system("ssh", $host, "mkdir", "-p", $dir);

        system("rsync", "-rvL", $file, "$host:$dir");
        system("ssh", $host, "adb", "push", "$file", "$dest");
    } else {
        if (-d $file) {
            $file =~ s!/*$!!;
            (my $base = $file) =~ s!.*/!!;
            push_one_file($file, $base);
        } elsif (-e $file) {
            (my $base = $file) =~ s!.*/!!;
            $_ = $file;
            push_one_file($_, $base);
        } elsif ($file =~ m!^/scp:|^[^/]+:!) {
            print "getting it with scp\n";
            mkdir "/tmp/adb_push.$$";
            my $port = "";
            if ($file =~ m!^/scp:([^@]+\@[^#]+)(?:#(\d+))?:(.*)!) {
                if ($2 ne "") {
                    $port = "-P $2";
                }
                $file = "$1:$3";
            }
            if (system("scp $port -r $file /tmp/adb_push.$$/") != 0 and system("yes-or-no-p -y 'Failed to scp $file, continue?'") !=0) {
                die "Failed to scp $file";
            }
            $file =~ s!/*$!!;
            (my $base = $file) =~ s!.*/!!;
            my @files = glob("/tmp/adb_push.$$/$base");
            debug "files are @files";
            for (@files) {
                ($base = $_) =~ s!.*/!!;
                push_one_file($_, $base);
            }
            system("rm -rfv /tmp/adb_push.$$");
        } else {
            print "Warning: $file not found\n";
        }
    }
    if ($secure) {
        my $base_file = $file;
        $base_file =~ s!.*/!!;
        my $base_dest = $dest;
        $base_dest =~ s!.*/!!;

        if ($base_file eq $base_dest) {
            system("adb", "shell", "chmod", "644", $dest);
        } else {
            system("adb", "shell", "chmod", "644", "$dest/$base_file");
        }
    }
}

$mount_cmd = "echo adb shell mount -o remount,ro /system; exec >/dev/null 2>&1; adb shell sync; adb shell mount -o remount,ro /system";
if ($host) {
    system("ssh", $host, "bash", "-c", $mount_cmd);
} else {
    system($mount_cmd);
}
