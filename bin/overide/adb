#!/bin/bash

me=$(readlink -f $0)
if which the-true-adb >/dev/null 2>&1; then
    the_prog=$(which the-true-adb)
else
    for x in $(type -a adb|grep 'adb is /'|grep -v /debug/|pn 3); do
        x=$(readlink -f "$x")
        if test "$x" = "$me"; then
            continue
        else
            the_prog=$x
            break
        fi
    done
fi

export the_prog

$the_prog start-server >/dev/null 2>&1
function die() {
    echo Error: "$@"
    exit -1
}

if test -z "$the_prog"; then
    die "Error, the adb is not found"
fi

function adb() {
    if test "$1" = -w; then
        echo -n 'wait-for-device ' 1>/dev/tty
        $the_prog wait-for-device
        shift
    fi

    if test "$1" = -r; then
        echo -n 'wait-for-device ' 1>/dev/tty
        $the_prog wait-for-device

        if $the_prog root 2>&1 | grep 'restarting adbd as root'; then
            while true; do
                echo -n '.' 1>/dev/tty
                $the_prog wait-for-device
                if adb shell id | grep uid=0 -q; then
                    break
                fi
            done
        fi
        shift
    fi

    if test "$1" = -s; then
        echo "$(select-output-line -- 'adb devices 2>&1 | perl -ne "print unless 1..1"'|pn 1)" > ~/.config/adb-device
        shift
        if test "$#" = 0; then
            exit
        fi
    elif test "$1" != devices -a $(setsid $the_prog start-server >/dev/null 2>&1 ; $the_prog devices | grep .| wc -l) -gt 2; then
        if test ! -e ~/.config/adb-device || ! $the_prog devices | grep -q $(cat ~/.config/adb-device); then
            command adb -s
        fi
        export ANDROID_SERIAL=$(cat ~/.config/adb-device)
    fi

    if test "$1" = gdbserver; then
        shift
        gdbserver "$@"
    elif test "$#" = 3 -a "$1" = shell -a "$2" = restart; then
        $the_prog shell stop $3;
        exec $the_prog shell start $3;
    elif test $# -gt 1 -a "$1" = shell; then
        if ! is-tty-io;then
            exec $the_prog "$@" | tr -d '\r'
        else
            shift
            exec adb-expect "$@"
        fi
    else
        exec $the_prog "$@"
    fi
}

function gdbserver() {
    port=3333
    TEMP=$(getopt -o p:P: --long process:port: -n $(basename $0) -- "$@")
    eval set -- "$TEMP"
    while true; do
        case "$1" in
            -p|--process)
                process=$2
                shift 2
                ;;
            -P|--port)
                port=$2
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                die "internal error"
                ;;
        esac
    done
    if test "$process" -a $# != 0; then
        die "Error: Usage $(basename $0) -p process -P port, or, $(basename $0) -P port CMD ARGS"
    fi
    if test "$process"; then
        pid=$(select-output-line -- bash -c 'adb shell ps |grep -P -e "\Q'$process'\E"'|pn 2)
        exec $the_prog shell gdbserver --attach :$port $pid
        return 0;
    fi
    $the_prog forward tcp:$port tcp:$port || true
    exec $the_prog shell gdbserver :$port "$@"
}
adb "$@"
